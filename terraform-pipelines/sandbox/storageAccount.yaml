trigger: none

variables:
  - group: AGENT_POOL_VAR_GRP

  - name: backendServiceArm
    value: RBAC-Sandbox
    readonly: true

  - name: environmentServiceName
    value: RBAC-Sandbox
    readonly: true

  - name: subscriptionId
    value: 1971f0d2-b061-4971-bbee-56171d168156
    readonly: true  
    
parameters:
  - name: moduleBranch
    displayName: Name of the branch where module is saved
    default: release
    type: string

  - name: deploymentConfigBranch
    displayName: Name of the branch where module call/Stack is saved
    default: release
    type: string
    
  - name: templateBranch
    displayName: Name of the branch where template is saved
    default: release
    type: string

  - name: workingDirectory
    displayName: Path to the working directory
    default: 'corp-devops-deployment-config/terraform/stack/storageAccount'
    type: string
  
  - name: backendType
    displayName: Type of backend
    default: 'azurerm'
    type: string

  - name: commandOptions
    displayName: Name of the commands to add if required
    default: '-var-file=$(sadir)'
    type: string
    
pool: Ubuntu-VMSS-POC

resources:
  repositories:
    - repository: iac-modules
      endpoint: LennarGitHubServiceConnection
      ref: refs/heads/${{parameters.moduleBranch}}
      type: github
      name: devsecops-len/iac-modules
      
    - repository: corp-devops-deployment-config
      endpoint: LennarGitHubServiceConnection
      ref: refs/heads/${{parameters.deploymentConfigBranch}}
      type: github
      name: devsecops-len/corp-devops-deployment-config
      
    - repository: ci-cd-templates
      endpoint: LennarGitHubServiceConnection
      ref: refs/heads/${{parameters.templateBranch}}
      type: github
      name: devsecops-len/ci-cd-templates

stages:
- stage: Setup
  jobs:
    - job: Deploy_StorageAccount_using_TF
      steps:
        - template: cd-templates/terraform/deployTerraformStack.yaml@ci-cd-templates
          parameters:
            workingDirectory: ${{parameters.workingDirectory}}
            backendType: ${{parameters.backendType}}
            backendServiceArm: $(backendServiceArm)
            backendAzureRmSubscriptionId: $(subscriptionId)
            commandOptions: ${{parameters.commandOptions}}
            environmentServiceName: $(environmentServiceName)
            providerAzureRmSubscriptionId: $(subscriptionId)
